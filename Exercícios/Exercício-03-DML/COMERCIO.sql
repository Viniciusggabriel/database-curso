-- OBS: endereço obrigatório, cadastro de somente um
DROP TABLE CLIENTE,
ENDERECO,
TELEFONE;
-- Comando para apagar tabela
CREATE DATABASE COMERCIO;
USE COMERCIO;
CREATE TABLE CLIENTE (
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	-- AUTO ENCREMENTA ESSE VALOR, VARIA DE CADA BANCO
	NOME VARCHAR(40) NOT NULL,
	-- NÃO PODE SER NULO, OU SEJA OBRIGATORIO
	SEXO ENUM("M", "F") NOT NULL,
	-- ENUM ATÉ O MOMENTO DO CURSO SÓ EXISTE NO MYSQL
	EMAIL VARCHAR(50) UNIQUE,
	-- UNIQUE SERVE PARA APARECER SÓ UMA VEZ
	CPF VARCHAR(15) UNIQUE
);
CREATE TABLE ENDERECO (
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(40) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,
	FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE)
);
CREATE TABLE TELEFONE (
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM("RES", "COM", "CEL") NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT,
	FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE) -- Cira o campo e linka ele com a outra tabela
);
-- Junção-> join
SELECT NOME,
	SEXO,
	BAIRRO,
	CIDADE
FROM CLIENTE,
	ENDERECO
WHERE IDCLIENTE = ID_CLIENTE;
-- Funciona porem não é recomendável devido a chave sempre ser igual ou seja TRUE
-- Modo correto é com o inner join
SELECT NOME,
	SEXO,
	BAIRRO,
	CIDADE
FROM CLIENTE
	INNER JOIN ENDERECO ON IDCLIENTE = ID_CLIENTE
WHERE SEXO = "F";
-- Exercício de aula
-- Ponteiramento ajuda na performance
SELECT NOME,
	SEXO,
	BAIRRO,
	CIDADE,
	TIPO,
	NUMERO
FROM CLIENTE C
	INNER JOIN ENDERECO E ON C.IDCLIENTE = E.ID_CLIENTE
	INNER JOIN TELEFONE T ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = "F";
/* Exercícios  */
-- Pegar todos os dados da tabela (Relatório geral)
SELECT NOME,
	SEXO,
	EMAIL,
	CPF,
	RUA,
	BAIRRO,
	CIDADE,
	ESTADO,
	TIPO,
	NUMERO
FROM CLIENTE CLI
	INNER JOIN ENDERECO ENDE ON CLI.IDCLIENTE = ENDE.ID_CLIENTE
	INNER JOIN TELEFONE TELE ON CLI.IDCLIENTE = TELE.ID_CLIENTE;
-- Relatório de homens
SELECT NOME,
	SEXO,
	EMAIL,
	CPF,
	RUA,
	BAIRRO,
	CIDADE,
	ESTADO,
	TIPO,
	NUMERO
FROM CLIENTE CLI
	INNER JOIN ENDERECO ENDE ON CLI.IDCLIENTE = ENDE.ID_CLIENTE
	INNER JOIN TELEFONE TELE ON CLI.IDCLIENTE = TELE.ID_CLIENTE
WHERE SEXO = "M";
--// Ouve um problema há um campo vazio em telefone //--
SELECT IDTELEFONE,
	NOME,
	TIPO,
	NUMERO
FROM CLIENTE
	INNER JOIN TELEFONE ON IDCLIENTE = ID_CLIENTE
WHERE NOME LIKE "Vinicius%";
/* Deleta o telefone */
DELETE FROM TELEFONE
WHERE IDTELEFONE = 17;
-- Quantidade de homens e mulheres
SELECT SEXO,
	COUNT(*) AS SEXO_COUNT
FROM CLIENTE
GROUP BY SEXO;
-- FUNÇÃO IF NULL
SELECT C.NOME,
	IFNULL(C.EMAIL, "NÃO INFORMADO") AS "E-MAIL",
	E.ESTADO,
	T.NUMERO
FROM CLIENTE C
	INNER JOIN ENDERECO E ON C.IDCLIENTE = E.ID_CLIENTE
	INNER JOIN TELEFONE T ON C.IDCLIENTE = T.ID_CLIENTE;
-- View()
CREATE VIEW VIEW_RELATORIO AS
SELECT C.NOME,
	IFNULL(C.EMAIL, "NÃO INFORMADO") AS "E-MAIL",
	E.ESTADO,
	T.NUMERO
FROM CLIENTE C
	INNER JOIN ENDERECO E ON C.IDCLIENTE = E.ID_CLIENTE
	INNER JOIN TELEFONE T ON C.IDCLIENTE = T.ID_CLIENTE;